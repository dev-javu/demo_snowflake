name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "DESTROY" to confirm irreversible destruction'
        required: true
        type: string
      plan_only:
        description: 'Only run plan -destroy, do not destroy'
        required: false
        type: boolean
        default: false
      target:
        description: 'Optional -target resource(s), comma-separated'
        required: false
        type: string

jobs:
  destroy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_admin_user: ${{ secrets.SF_USERNAME }}
      SF_PRIVATE_KEY_B64: ${{ secrets.SF_PRIVATE_KEY_B64 }}
      TF_VAR_private_key_passphrase: ${{ secrets.SF_PRIVATE_KEY_PASSPHRASE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Confirm destroy
        run: |
          if [ "${{ inputs.confirm }}" != "DESTROY" ]; then
            echo "Confirmation failed. Type DESTROY to proceed."
            exit 1
          fi

      - name: Prepare private key
        run: |
          echo "$SF_PRIVATE_KEY_B64" | base64 --decode > $RUNNER_TEMP/snowflake_key.p8
          chmod 600 $RUNNER_TEMP/snowflake_key.p8
          echo "TF_VAR_admin_private_key_path=$RUNNER_TEMP/snowflake_key.p8" >> $GITHUB_ENV

      - name: Terraform init
        run: terraform init
        working-directory: terraform

      - name: Terraform plan -destroy
        run: |
          if [ -n "${{ inputs.target }}" ]; then
            IFS=',' read -ra TARGS <<< "${{ inputs.target }}"
            ARGS=""
            for t in "${TARGS[@]}"; do
              t_trimmed="$(echo "$t" | xargs)"
              [ -n "$t_trimmed" ] && ARGS="$ARGS -target=$t_trimmed"
            done
            echo "Running plan with targets: $ARGS"
            terraform plan -destroy $ARGS
          else
            terraform plan -destroy
          fi
        working-directory: terraform

      - name: Terraform destroy
        if: ${{ inputs.plan_only == false }}
        run: |
          if [ -n "${{ inputs.target }}" ]; then
            IFS=',' read -ra TARGS <<< "${{ inputs.target }}"
            ARGS=""
            for t in "${TARGS[@]}"; do
              t_trimmed="$(echo "$t" | xargs)"
              [ -n "$t_trimmed" ] && ARGS="$ARGS -target=$t_trimmed"
            done
            echo "Running destroy with targets: $ARGS"
            terraform destroy -auto-approve $ARGS
          else
            terraform destroy -auto-approve
          fi
        working-directory: terraform

