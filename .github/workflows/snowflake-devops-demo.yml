name: Snowflake Schema Deploy


# Triggers the action based on branch and path. 
on:
  push:
    branches:
      - main
    paths:
      - 'migrations/**'
      - 'terraform/**'

  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      migrations: ${{ steps.filter.outputs.migrations }}
      terraform: ${{ steps.filter.outputs.terraform }}

    steps:
      - name: Retrieve repository
        uses: actions/checkout@v4

      - name: Detect changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            migrations:
              - 'migrations/**'
            terraform:
              - 'terraform/**'

  schema-change-job:
    needs: detect-changes
    if: needs.detect-changes.outputs.migrations == 'true'
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Retrieve repository
        uses: actions/checkout@v4

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x

      - name: Prepare private key
        env:
          SF_PRIVATE_KEY_B64: ${{ secrets.SF_PRIVATE_KEY_B64 }}
          SF_PRIVATE_KEY_PASSPHRASE: ${{ secrets.SF_PRIVATE_KEY_PASSPHRASE }}
        run: |
          echo "$SF_PRIVATE_KEY_B64" | base64 --decode > $RUNNER_TEMP/snowflake_key.p8
          chmod 600 $RUNNER_TEMP/snowflake_key.p8
          echo "SNOWFLAKE_PRIVATE_KEY_PATH=$RUNNER_TEMP/snowflake_key.p8" >> $GITHUB_ENV

      - name: Execute schemachange
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SNOWFLAKE_USERNAME: ${{ secrets.SF_USERNAME }}
          SNOWFLAKE_ROLE: ${{ secrets.SF_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_PRIVATE_KEY_PATH: ${{ env.SNOWFLAKE_PRIVATE_KEY_PATH }}
          SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: ${{ secrets.SF_PRIVATE_KEY_PASSPHRASE }}
        run: |
          pip install schemachange
          schemachange -f $GITHUB_WORKSPACE/migrations -a $SNOWFLAKE_ACCOUNT -u $SNOWFLAKE_USERNAME -r $SNOWFLAKE_ROLE -w $SNOWFLAKE_WAREHOUSE -d $SNOWFLAKE_DATABASE --private-key-path $SNOWFLAKE_PRIVATE_KEY_PATH --private-key-passphrase $SNOWFLAKE_PRIVATE_KEY_PASSPHRASE -c $SNOWFLAKE_DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

  terraform-job:
    needs: detect-changes
    if: needs.detect-changes.outputs.terraform == 'true'
    runs-on: ubuntu-latest
    env:
      TF_VAR_admin_user: ${{ secrets.SF_USERNAME }}
      TF_VAR_private_key_passphrase: ${{ secrets.SF_PRIVATE_KEY_PASSPHRASE }}

    steps:
      - name: Retrieve repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Prepare private key for Terraform
        env:
          SF_PRIVATE_KEY_B64: ${{ secrets.SF_PRIVATE_KEY_B64 }}
          TF_VAR_private_key_passphrase: ${{secrets.SF_PRIVATE_KEY_PASSPHRASE}}
        run: |
          echo "$SF_PRIVATE_KEY_B64" | base64 --decode > $RUNNER_TEMP/snowflake_key.p8
          chmod 600 $RUNNER_TEMP/snowflake_key.p8
          echo "TF_VAR_admin_private_key_path=$RUNNER_TEMP/snowflake_key.p8" >> $GITHUB_ENV

      - name: Terraform fmt
        run: terraform fmt -check
        working-directory: terraform

      - name: Terraform init
        run: terraform init
        working-directory: terraform

      - name: Terraform validate
        run: terraform validate
        working-directory: terraform

      - name: Terraform plan
        run: terraform plan
        working-directory: terraform
